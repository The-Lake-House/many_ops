#!/usr/bin/env bash

if [[ "$#" -lt 2 ]]; then
    echo "Usage: ./collect INPUT_BASE_DIR OUTPUT_BASE_DIR"
    exit 1
fi
INPUT_BASE_DIR="$1"
OUTPUT_BASE_DIR="$2"

for INPUT_DIR in "$INPUT_BASE_DIR"/*/*; do

    VARIANT=$(basename "$INPUT_DIR")
    ANALYSIS=$(basename "$(dirname "$INPUT_DIR")")
    OUTPUT_DIR="$OUTPUT_BASE_DIR/$ANALYSIS/$VARIANT"
    mkdir -p "$OUTPUT_DIR"

    # du
    awk '{print $1}' "$INPUT_DIR"/minio_du/* > "$OUTPUT_DIR"/du

    # ls
    awk '{print $2}' "$INPUT_DIR"/minio_du/* > "$OUTPUT_DIR"/ls

    # hms
    du "$INPUT_DIR"/hms/* | cut -f 1 > "$OUTPUT_DIR"/hms

    # trace_op
    wc -l --total=never "$INPUT_DIR"/trace_op/* | awk '{print $1}' > "$OUTPUT_DIR"/trace_op

    # trace_select
    wc -l --total=never "$INPUT_DIR"/trace_select/* | awk '{print $1}' > "$OUTPUT_DIR"/trace_select

    # runtime_op
    paste <(grep -h SparkListenerSQLExecutionStart "$INPUT_DIR"/runtime_op/* | jq --slurp 'map(select(.executionId == 1) | .time) | .[]') <(grep -h SparkListenerSQLExecutionEnd "$INPUT_DIR"/runtime_op/* | jq --slurp 'map(select(.executionId == 1) | .time) | .[]') | awk '{print $2 - $1}' > "$OUTPUT_DIR"/runtime_op

    # runtime_select
    paste <(grep -h SparkListenerSQLExecutionStart "$INPUT_DIR"/runtime_select/* | jq --slurp 'map(select(.executionId == 1) | .time) | .[]') <(grep -h SparkListenerSQLExecutionEnd "$INPUT_DIR"/runtime_select/* | jq --slurp 'map(select(.executionId == 1) | .time) | .[]') | awk '{print $2 - $1}' > "$OUTPUT_DIR"/runtime_select

    # sar
    sadf -d "$INPUT_DIR"/sar/benchmark.sar -- -u > "$OUTPUT_DIR"/sar_cpu
    sadf -d "$INPUT_DIR"/sar/benchmark.sar -- -r > "$OUTPUT_DIR"/sar_mem
    sadf -d "$INPUT_DIR"/sar/benchmark.sar -- -b > "$OUTPUT_DIR"/sar_io
    sadf -d "$INPUT_DIR"/sar/benchmark.sar -- -d --dev=nvme0n1p6 > "$OUTPUT_DIR"/sar_disk

done
