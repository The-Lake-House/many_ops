#!/usr/bin/env bash

set -e

NUM_REPS=1000

OUTPUT_DIR=/home/agrueneberg/many_deletes

mkdir -p "$OUTPUT_DIR"

mcli mb -p minio/many-deletes

for CATALOG in iceberg delta; do

    SCHEMA="many_deletes_$CATALOG"

    if [[ -d "$OUTPUT_DIR/$CATALOG" ]]; then
        echo "$OUTPUT_DIR/$CATALOG already exists"
        exit 1
    fi

    mkdir -p "$OUTPUT_DIR/$CATALOG"/{sar,trace,runtime,minio_du,minio_ls,hms}

    $TRINO_HOME/bin/trino --catalog "$CATALOG" --execute "CREATE SCHEMA IF NOT EXISTS $CATALOG.many_deletes_$CATALOG WITH (location = 's3a://many-deletes/$CATALOG');"

    $TRINO_HOME/bin/trino --catalog "$CATALOG" --schema "$SCHEMA" --execute 'DROP TABLE IF EXISTS data;'

    $TRINO_HOME/bin/trino --catalog "$CATALOG" --schema "$SCHEMA" --execute 'CREATE TABLE data (key INT);'

    $TRINO_HOME/bin/trino --catalog "$CATALOG" --schema "$SCHEMA" --file inserts.sql

    # Start sar monitoring
    sar -o "$OUTPUT_DIR/$CATALOG/sar/benchmark.sar" -u -r -d --dev=nvme0n1 -F --fs=/dev/mapper/cryptroot 1 &> /dev/null &
    SAR_PID=$!

    sleep 3

    for REP in $(seq -w 1 "$NUM_REPS"); do

        $TRINO_HOME/bin/trino --catalog "$CATALOG" --schema "$SCHEMA" --execute "DELETE FROM data WHERE key = $((10#$REP));" &> /dev/null

        QUERY_ID="${CATALOG}_${REP}_$(openssl rand -hex 4)"

        # Start background tracing
        mcli admin trace minio > "$OUTPUT_DIR/$CATALOG/trace/$REP" &
        TRACE_PID=$!

        # Perform query
        $TRINO_HOME/bin/trino --source "$QUERY_ID" --catalog "$CATALOG" --schema "$SCHEMA" --execute 'SELECT * FROM data;' --output-format NULL

        # Stop background tracing
        kill -SIGINT $TRACE_PID

        # Collect runtime
        $TRINO_HOME/bin/trino --execute "SELECT CAST(TO_UNIXTIME(started) AS INT), TO_MILLISECONDS(\"end\" - started) FROM system.runtime.queries WHERE source = '$QUERY_ID';" --output-format CSV_UNQUOTED 2>/dev/null > "$OUTPUT_DIR/$CATALOG/runtime/$REP"

        # Collect MinIO bucket size and bucket listings
        #mcli du "minio/many-deletes/$CATALOG" > "$OUTPUT_DIR/$CATALOG/minio_du/$REP"
        #mcli du "minio/many-deletes/$CATALOG" > "$OUTPUT_DIR/$CATALOG/minio_du/$REP"
        s3cmd ls -r "s3://many-deletes/$CATALOG" > "$OUTPUT_DIR/$CATALOG/minio_ls/$REP"
        s3cmd ls -r "s3://many-deletes/$CATALOG" > "$OUTPUT_DIR/$CATALOG/minio_ls/$REP"

        # Collect HMS SQL dump and size
        sudo -u postgres pg_dump hms > "$OUTPUT_DIR/$CATALOG/hms/$REP"

        echo "$CATALOG: $REP / $NUM_REPS"

    done

    # Stop sar monitoring
    kill -SIGINT $SAR_PID

    $TRINO_HOME/bin/trino --catalog "$CATALOG" --schema "$SCHEMA" --execute 'DROP TABLE data;'

done

mcli rb --force minio/many-deletes
